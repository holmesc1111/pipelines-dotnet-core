# File: azure-pipelines.yml
trigger:
- none

variables:
  - name: version
    value: '1.0.0.50'
  - name: hydraPackageName
    value: 'org.test.package'
  - name: projectName
    value: 'application/.'
  - name: azureDevOpsEnvironment
    value: 'test'

resources:
  repositories:
    - repository: scripts
      type: github
      name: healthwise/go.scripts.templates
      endpoint: DevOps

    - repository: template_scripts
      type: github
      name: holmesc1111/pipelines-dotnet-core
      endpoint: DevOps   

jobs:
  - job: setup
    steps:  
    - checkout: self
      path: "s/source"
    - task: PowerShell@2
      displayName: 'Set Hydra environment name'
      name: passOutput
      inputs:
        targetType: 'inline'
        script: |
            if ("${{ variables.azureDevOpsEnvironment }}" -match '(dev).*') { Write-Host "##vso[task.setvariable variable=hydraEnvironment;isoutput=true]dev" } else {Write-Host "##vso[task.setvariable variable=hydraEnvironment;isoutput=true]${{ variables.azureDevOpsEnvironment }}"}
  - job: run
    dependsOn: setup
    variables:
      setHydraEnviornmentName: $[dependencies.setup.outputs['passOutput.hydraEnvironment']]

    steps:
    - task: PowerShell@2
      displayName: 'Output Hydra environment name'           
      inputs:
        targetType: inline
        script: |
          Write-Output "Environment name is $(setHydraEnviornmentName)"
